defmodule Nqcc do
  def main(opc) do
    case opc do
      # For example [escript xenon -switch "namefile.c"]
      # help
      ["-h"] -> IO.puts("Opciones disponibles:\n
      -lt [filename.c]  Show token list.
      -as [filename.c]  Show AST.
      -w [filename.c]  Compile program . ")

      # Token list
      ["-lt", path] ->
            IO.puts("Token List: \n\n\n\n")
            IO.inspect(Lexer.lexing(File.read!(path)))

      # Impresion ast
      ["-as", path] ->
        IO.puts("Arbol AST correspondiente:\n\n")
        tokens = Lexer.lexing(File.read!(path))
        ast = Parser.parse_program(tokens)
        IO.inspect(ast)

      # Full compile
      ["-c", path] ->
        IO.puts("Compiling the file: " <> path)
        tokens = Lexer.lexing(File.read!(path))
        ast = Parser.parse_program(tokens)
        assemblyCode = CodeGenerator.generate_code(ast)
        Linker.generate_binary(assemblyCode, path)

    end
  end
end
